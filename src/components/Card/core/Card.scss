@use "../../../styles/theme" as theme;
@use "../../../styles/_breakpoints" as bp;
@use "../../../styles/globals";
@use "sass:color";
@use "sass:map";

.card {
  overflow: hidden;
  margin: theme.$spacing-sm;
  position: relative;
  background-color: theme.$background-color-surface;
  display: flex;
  flex-direction: column;
  max-width: 450px;
  width: fit-content;
  height: fit-content;
  color: var(--text-color-primary);
  transition: transform 0.3s ease;

  @include bp.down(sm) {
    max-width: 100%;
    margin: theme.$spacing-xs;
  }

  @include bp.up(lg) {
    max-width: 600px;
    margin: theme.$spacing-md;
  }

  @each $key, $value in theme.$rounding {
    &_round-#{$key} {
      border-radius: $value;
    }
  }

  @each $key, $value in theme.$shadow {
    &_shadow-#{$key} {
      box-shadow: $value;
    }
  }

  &_loading {
    background: none !important;
    box-shadow: none !important;
    padding: 0;
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 250px;

    @include bp.down(sm) {
      min-height: 180px;
    }

    @include bp.up(lg) {
      min-height: 300px;
    }
  }

  &_fade-in {
    animation: fade-in 0.8s ease-in-out;
  }

  &_media {
    width: 100%;
    height: auto;
    position: relative;
    aspect-ratio: 4 / 4;
    object-fit: cover;
    border-bottom: 1px solid rgb(0 0 0 / 5%);

    @include bp.down(sm) {
      aspect-ratio: 1 / 1;
    }

    @include bp.up(lg) {
      aspect-ratio: 16 / 9;
    }
  }

  &_image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  &_vertical {
    flex-direction: column;

    .card_content {
      flex-direction: column;
    }

    .card_image {
      width: 100%;
      max-height: 200px;

      @include bp.down(sm) {
        max-height: 150px;
      }

      @include bp.up(lg) {
        max-height: 300px;
      }
    }
  }

  &_disabled {
    background-color: theme.$disabled-color;
    color: var(--text-color-primary);
    cursor: not-allowed;
    pointer-events: none;
    opacity: 0.6;
    box-shadow: none;
  }

  &_outline {
    background: transparent;
    border: 2px solid currentcolor;
    box-shadow: none;

    @include bp.down(sm) {
      border-width: 1.5px;
    }
  }

  @each $name, $props in theme.$themes {
    &_#{$name} {
      background: map.get($props, bg);
      color: var(--text-color-primary);

      .card_icon,
      .card_description {
        color: var(--text-color-primary);
      }

      .card_loading {
        background-color: transparent;
      }
    }

    &_#{$name}.card_outline {
      background: transparent;
      border: 2px solid map.get($props, border);
      box-shadow: none;

      @include bp.down(sm) {
        border-width: 1.5px;
      }
    }
  }

  @each $name, $props in theme.$states {
    &_#{$name} {
      background: map.get($props, bg);

      .card_icon,
      .card_description {
        color: var(--text-color-primary);
      }

      .card_loading {
        background-color: transparent;
      }
    }

    &_#{$name}.card_outline {
      background: transparent;
      border: 2px solid map.get($props, border);

      @include bp.down(sm) {
        border-width: 1.5px;
      }
    }
  }

  &_content {
    display: flex;
    flex-direction: column;
    width: 100%;
  }

  &_header {
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: theme.$spacing-md;

    @include bp.down(sm) {
      padding: theme.$spacing-sm;
    }

    @include bp.up(lg) {
      padding: theme.$spacing-lg;
    }
  }

  &_header,
  &_body {
    padding: theme.$spacing-md;
    display: flex;
  }

  &_body {
    flex-direction: column;
    gap: theme.$spacing-sm;
    padding: theme.$spacing-sm;

    @include bp.up(lg) {
      gap: theme.$spacing-md;
    }
  }

  &_title {
    font-weight: theme.$font-weight-bold;
    margin: 0;
    flex: 1;
    display: flex;
    gap: theme.$spacing-sm;

    @include bp.down(sm) {
      font-size: theme.$font-size-sm;
    }

    @include bp.up(lg) {
      font-size: theme.$font-size-lg;
    }
  }

  &_icon {
    font-size: 1.2em;
    display: flex;
    color: var(--text-color-primary);

    @include bp.down(sm) {
      font-size: 1em;
    }

    @include bp.up(lg) {
      font-size: 1.4em;
    }
  }

  &_description {
    color: var(--text-color-primary);
    width: 95%;
    margin: theme.$spacing-xxs auto;

    @include bp.down(sm) {
      font-size: theme.$font-size-sm;
    }

    @include bp.up(lg) {
      font-size: theme.$font-size-lg;
    }
  }

  &_footer {
    padding: theme.$spacing-md;
    border-top: 2px solid rgb(0 0 0 / 10%);

    @include bp.down(sm) {
      padding: theme.$spacing-sm;
      border-width: 1px;
    }

    @include bp.up(lg) {
      padding: theme.$spacing-lg;
    }
  }

  &_actions {
    display: flex;
    flex-wrap: wrap;
    padding: theme.$spacing-sm;
    gap: theme.$spacing-sm;

    @include bp.down(sm) {
      gap: theme.$spacing-xs;
    }

    @include bp.up(lg) {
      gap: theme.$spacing-md;
    }
  }

  &_xs {
    .card_description {
      font-size: theme.$font-size-xs;
    }

    .card_icon {
      font-size: 0.9em;
    }

    .card_title {
      font-size: theme.$font-size-sm;
      line-height: 0.9em;
    }

    .card_children {
      font-size: theme.$font-size-xs;
    }
  }

  &_small {
    .card_description {
      font-size: theme.$font-size-sm;
    }

    .card_icon {
      font-size: 1em;
    }

    .card_title {
      font-size: theme.$font-size-md;
    }

    .card_children {
      font-size: theme.$font-size-sm;
    }
  }

  &_medium {
    .card_description {
      font-size: theme.$font-size-md;
    }

    .card_icon {
      font-size: 1.2em;
    }

    .card_title {
      font-size: theme.$font-size-base;
    }

    .card_children {
      font-size: theme.$font-size-md;
    }
  }

  &_large {
    .card_description {
      font-size: theme.$font-size-lg;
    }

    .card_icon {
      font-size: 1.4em;
    }

    .card_title {
      font-size: 1.4em;
    }

    .card_children {
      font-size: theme.$font-size-lg;
    }
  }

  &_xl {
    .card_description {
      font-size: theme.$font-size-xl;
    }

    .card_icon {
      font-size: 1.2em;
    }

    .card_title {
      font-size: 1.6em;
    }

    .card_children {
      font-size: theme.$font-size-xl;
    }
  }
}

.card_left,
.card_center,
.card_right {
  text-align: inherit;

  .card_header,
  .card_body,
  .card_footer,
  .card_actions {
    align-items: inherit;
    justify-content: inherit;
    text-align: inherit;
  }
}

.card_left {
  text-align: left;
}

.card_center {
  text-align: center;
}

.card_right {
  text-align: right;
}

.card_horizontal {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  min-height: 200px;
  width: 100%;
  height: auto;
  max-width: 900px;

  @include bp.down(sm) {
    flex-direction: column;
    max-width: 100%;
    min-height: 150px;
  }

  @include bp.up(lg) {
    min-height: 250px;
    max-width: 1100px;
  }

  .card_content {
    flex-direction: row;
    flex: 1;
    width: 100%;
    height: 100%;

    @include bp.down(sm) {
      flex-direction: column;
    }
  }

  .card_image {
    width: 50%;
    height: auto;
    aspect-ratio: 1.5;
    object-fit: cover;
    display: block;

    @include bp.down(sm) {
      width: 100%;
      aspect-ratio: 1 / 1;
    }

    @include bp.up(lg) {
      aspect-ratio: 16 / 10;
    }
  }

  .card_body {
    flex: 1;
    padding: theme.$spacing-md;
    display: flex;
    flex-direction: column;
    justify-content: center;

    @include bp.down(sm) {
      padding: theme.$spacing-sm;
    }

    @include bp.up(lg) {
      padding: theme.$spacing-lg;
    }
  }

  .card_footer {
    padding: theme.$spacing-md;

    @include bp.down(sm) {
      padding: theme.$spacing-sm;
    }

    @include bp.up(lg) {
      padding: theme.$spacing-lg;
    }
  }
}

.card_clickable {
  cursor: pointer;
  transition:
    transform 0.3s ease,
    box-shadow theme.$transition-default;

  &:hover {
    transform: translateY(-2px);
    box-shadow: theme.$box-shadow-medium;
  }

  &:focus-visible {
    outline: 2px solid var(--focus-outline-color, var(--primary-color));
    outline-offset: 3px;
    box-shadow: 0 0 0 4px color.adjust(#000, $lightness: 20%, $alpha: -0.8);
  }

  @include bp.down(sm) {
    &:hover {
      transform: translateY(-1px);
      box-shadow: theme.$box-shadow-light;
    }
  }
}

.card :focus-visible {
  outline: 2px solid var(--focus-outline-color, var(--primary-color));
  outline-offset: 2px;
  border-radius: 4px;
}

@media (prefers-reduced-motion: reduce) {
  .card,
  .card * {
    animation: none !important;
    transition: none !important;
  }

  .card_clickable:hover {
    transform: none !important;
    box-shadow: none !important;
  }
}

@media (hover: none) {
  .card_clickable:hover {
    transform: none;
    box-shadow: none;
  }
}

@media (forced-colors: active) {
  .card {
    border: 1px solid ButtonText;
    outline-color: Highlight;
    box-shadow: none !important;
    background: Canvas;
    color: CanvasText;
  }

  .card_outline {
    border: 1px solid ButtonText;
  }

  .card_footer {
    border-top: 1px solid ButtonText;
  }

  .card_clickable:focus-visible {
    outline: 2px solid Highlight;
    outline-offset: 3px;
  }
}

.card_primary,
.card_secondary,
.card_tertiary,
.card_quaternary,
.card_success,
.card_error,
.card_warning {
  &:focus-within {
    box-shadow: 0 0 0 3px color.adjust(#000, $lightness: 30%, $alpha: -0.85);
  }
}
