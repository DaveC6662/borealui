@use "../../../styles/theme" as theme;
@use "../../../styles/_breakpoints" as bp;
@use "sass:map";

.timeline {
  display: flex;
  flex-direction: column;
  position: relative;
  width: fit-content;
  height: fit-content;
  max-width: 600px;
  padding-left: theme.$spacing-md;
  background: transparent;

  @include bp.down(sm) {
    width: 100%;
    max-width: 100%;
    padding-left: theme.$spacing-sm;
  }

  &:focus-within {
    outline: 2px solid var(--focus-outline-color, var(--primary-color));
    outline-offset: 3px;
    border-radius: theme.$border-radius-sm;
  }
}

.timeline_horizontal {
  flex-direction: row;
  align-items: center;
  padding-left: 0;
  max-width: 100%;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  overscroll-behavior-x: contain;
  scroll-snap-type: x proximity;

  &::-webkit-scrollbar-track {
    background-color: transparent !important;
  }
}

.timeline_item {
  display: inline-flex;
  align-items: center;
  padding-bottom: theme.$spacing-sm;
  gap: theme.$spacing-sm;
  position: relative;
  text-align: center;
  scroll-snap-align: start;

  &.timeline_horizontal {
    overflow: visible;
    gap: 0;
    margin-bottom: 2px;
  }

  &:not(:last-child)::after {
    content: "";
    position: absolute;
    left: 13.5px;
    top: 62%;
    width: 2px;
    height: 5em;
    background-color: var(--primary-color);

    @include bp.down(xs) {
      left: 12px;
      height: 4em;
    }
    @include bp.up(lg) {
      left: 14px;
      height: 5.5em;
    }
  }

  &.timeline_horizontal:not(:last-child)::after {
    top: 46%;
    left: 100%;
    width: 20px;
    height: 2px;

    @include bp.down(xs) {
      width: 14px;
    }
    @include bp.up(lg) {
      width: 24px;
    }
  }
}

.timeline_marker {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 25px;
  height: 25px;
  min-width: 30px;
  min-height: 30px;
  border-radius: theme.$border-radius-round;
  background-color: var(--primary-color);
  color: var(--text-color-primary);
  font-size: theme.$font-size-sm;
  transition: transform 0.3s ease-in-out;
  line-height: 0.5em;

  &:hover {
    transform: scale(1.05);
  }

  &:focus-visible {
    outline: 2px solid var(--focus-outline-color, var(--primary-color));
    outline-offset: 2px;
  }

  &.timeline_horizontal {
    margin: 10px;
    overflow-x: visible;
  }

  @include bp.down(xs) {
    width: 22px;
    height: 22px;
    min-width: 24px;
    min-height: 24px;
  }
  @include bp.up(lg) {
    width: 28px;
    height: 28px;
    min-width: 32px;
    min-height: 32px;
  }
}

.timeline_dot {
  width: 8px;
  height: 8px;
  background-color: var(--text-color-primary);
  border-radius: 50%;

  @include bp.down(xs) {
    width: 7px;
    height: 7px;
  }
  @include bp.up(lg) {
    width: 9px;
    height: 9px;
  }
}

.timeline_content {
  background: var(--background-color-lighter);
  padding: theme.$spacing-sm;
  flex: 1;
  min-width: 15rem;

  &.timeline_horizontal {
    overflow-x: visible;
  }

  @include bp.down(xs) {
    min-width: 12rem;
    padding: theme.$spacing-xs;
  }
  @include bp.up(lg) {
    min-width: 18rem;
    padding: theme.$spacing-md;
  }
}

.timeline_title {
  text-align: center;
  font-weight: theme.$font-weight-bold;
  margin-bottom: theme.$spacing-xs;
}

.timeline_date {
  font-size: theme.$font-size-sm;
}

.timeline_description {
  font-size: theme.$font-size-md;
  margin-top: theme.$spacing-xs;

  @include bp.down(xs) {
    font-size: theme.$font-size-sm;
  }
}

@each $themeName, $vals in theme.$themes {
  .timeline_#{$themeName} {
    .timeline_item:not(:last-child)::after {
      background-color: map.get($vals, border);
    }
    .timeline_marker {
      background-color: map.get($vals, bg);
      color: map.get($vals, text);
    }
  }
}

@each $stateName, $vals in theme.$states {
  .timeline_#{$stateName} {
    .timeline_item:not(:last-child)::after {
      background-color: map.get($vals, border);
    }
    .timeline_marker {
      background-color: map.get($vals, bg);
      color: map.get($vals, text);
    }
  }
}

@each $key, $value in theme.$rounding {
  .timeline_round-#{$key} {
    border-radius: $value;
  }
}
@each $key, $value in theme.$shadow {
  .timeline_shadow-#{$key} {
    box-shadow: $value;
  }
}

@media (prefers-reduced-motion: reduce) {
  .timeline,
  .timeline * {
    transition: none !important;
    animation: none !important;
  }
  .timeline_marker:hover {
    transform: none !important;
  }
}

@media (hover: none) {
  .timeline_marker:hover {
    transform: none;
  }
}

@media (forced-colors: active) {
  .timeline_content {
    background: Canvas;
    color: CanvasText;
    border: 1px solid ButtonText;
  }
  .timeline_item:not(:last-child)::after {
    background: ButtonText !important;
  }
  .timeline_marker {
    background: ButtonFace !important;
    color: ButtonText !important;
    border: 1px solid ButtonText !important;
  }
}
