@use "../../../styles/theme" as theme;
@use "../../../styles/globals";
@use "sass:color";
@use "sass:map";

.container {
  display: inline-flex;
  justify-content: space-between;
  align-items: center;
  width: fit-content;
  padding-left: theme.$spacing-sm;
  padding-right: theme.$spacing-xs;
  border-radius: theme.$border-radius-xl;
  margin: theme.$spacing-sm;
  box-shadow: theme.$box-shadow-medium;
  transition: theme.$transition-default;
  max-width: 400px;

  @media (width <=480px) {
    padding: 0.3rem 0.5rem;
    height: 35px;
    width: 95%;
  }

  input {
    width: 100%;
    padding: theme.$spacing-xs;
    border: none;
    border-radius: theme.$border-radius-lg;
    background-color: transparent;
    color: var(--text-color-primary);
  }
}

.textInput {
  outline: none;
  flex: 1;
  margin: theme.$spacing-sm;
  margin-left: 1em;
  font-size: theme.$font-size-base;
  border: none;
  border-radius: theme.$border-radius-lg;
  background-color: transparent;
  color: var(--text-color-primary);

  &::placeholder {
    color: var(--text-color-primary);
    opacity: 0.8;
  }

  @media (width <=480px) {
    width: 100%;
    font-size: calc(theme.$font-size-base * 0.9);
  }
}

.iconContainer {
  display: flex;
  box-sizing: border-box;
  margin: 0.1em;

  svg {
    width: 1em;
    height: 1em;
    color: var(--text-color-primary);

    @media (width <=480px) {
      width: 15px;
      height: 15px;
    }
  }
}

.togglePassword {
  padding: theme.$spacing-xs;
  box-sizing: border-box;

  @media (width <=480px) {
    margin-top: theme.$spacing-xs;
  }
}

.disabled {
  cursor: not-allowed;
  pointer-events: none;
  opacity: 0.6;
  background-color: theme.$disabled-color;

  .textInput {
    background-color: transparent;
  }
}

@each $theme, $vals in theme.$themes {
  .#{$theme} {
    background-color: map.get($vals, bg);
    color: map.get($vals, text);
    box-shadow: map.get($vals, shadow, theme.$box-shadow-medium);

    &:hover {
      background-color: map.get($vals, hover);
    }

    .textInput::placeholder {
      color: map.get($vals, text);
    }

    .iconContainer svg {
      color: map.get($vals, text);
    }
  }
}

.clear {
  box-shadow: none;
  border: 1px solid var(--text-color-primary);

  .textInput {
    border: none;
  }
}
