@use "../../../styles/theme" as theme;
@use "../../../styles/_breakpoints" as bp;
@use "../../../styles/globals";
@use "sass:map";

.textInput_container {
  display: inline-flex;
  justify-content: space-between;
  align-items: center;
  width: fit-content;
  margin: theme.$spacing-sm;
  transition: theme.$transition-default;
  max-width: 400px;
  background: transparent;

  &:focus-within {
    outline: 2px solid var(--focus-outline-color, var(--primary-color));
    outline-offset: 3px;
    border-radius: theme.$border-radius-md;
  }

  @include bp.down(xs) {
    padding: 0.3rem 0.5rem;
    height: 35px;
    width: 95%;
    max-width: none;
  }

  input {
    width: 100%;
    padding: theme.$spacing-xs;
    border: none;
    background-color: transparent;
    color: var(--text-color-primary);
  }
}

.textInput {
  outline: none;
  flex: 1;
  margin: theme.$spacing-sm;
  font-size: theme.$font-size-base;
  border: none;
  border-radius: theme.$border-radius-lg;
  background-color: transparent;
  color: var(--text-color-primary);
  font-family: theme.$font-family-primary;
  min-height: 2.5rem;

  &::placeholder {
    color: var(--text-color-primary);
    opacity: 0.8;
  }

  &:focus-visible {
    outline: 2px solid var(--focus-outline-color, var(--primary-color));
    outline-offset: 2px;
    border-radius: theme.$border-radius-lg;
  }

  @include bp.down(xs) {
    width: 100%;
    font-size: calc(theme.$font-size-base * 0.9);
    margin: theme.$spacing-xs;
  }

  &_icon_container {
    display: flex;
    box-sizing: border-box;
    margin: 0.1em;

    svg {
      width: 1em;
      height: 1em;
      color: var(--text-color-primary);

      @include bp.down(xs) {
        width: 15px;
        height: 15px;
      }
    }
  }

  &_togglePassword {
    padding: theme.$spacing-xs;
    box-sizing: border-box;
    background: transparent;
    border: none;
    color: inherit;
    cursor: pointer;

    &:focus-visible {
      outline: 2px solid var(--focus-outline-color, var(--primary-color));
      outline-offset: 2px;
      border-radius: 6px;
    }

    @include bp.down(xs) {
      margin-top: theme.$spacing-xs;
    }
  }

  &_clear {
    box-shadow: none;

    .textInput {
      border: none;
    }
  }
}

@each $state, $vals in theme.$states {
  .textInput_#{$state} {
    border: 2px solid map.get($vals, border);
  }
}

@each $themeName, $vals in theme.$themes {
  .textInput_#{$themeName} {
    background-color: map.get($vals, bg);
    color: map.get($vals, text);
    box-shadow: map.get($vals, shadow, theme.$box-shadow-medium);

    &:hover {
      background-color: map.get($vals, hover);
    }

    .textInput::placeholder {
      color: map.get($vals, text);
    }

    .textInput_icon_container svg {
      color: map.get($vals, text);
    }

    &.textInput_outline {
      background-color: transparent;
      color: map.get($vals, text);
      box-shadow: none;
      border: 2px solid map.get($vals, border);
    }
  }
}

.textInput_disabled {
  cursor: not-allowed;
  pointer-events: none;
  opacity: 0.6;
  background-color: theme.$disabled-color;
}

@each $key, $value in theme.$rounding {
  .textInput_round-#{$key} {
    border-radius: $value;

    input {
      border-radius: $value;
    }
  }
}

@each $key, $value in theme.$shadow {
  .textInput_shadow-#{$key} {
    box-shadow: $value;
  }
}

@media (prefers-reduced-motion: reduce) {
  .textInput_container,
  .textInput_container * {
    transition: none !important;
    animation: none !important;
  }
}

@media (forced-colors: active) {
  .textInput_container {
    background: Canvas;
    color: CanvasText;
    border: 1px solid ButtonText;
  }

  .textInput {
    color: CanvasText;
    background: Canvas;
  }

  .textInput::placeholder {
    color: CanvasText;
  }

  .textInput:focus-visible,
  .textInput_container:focus-within {
    outline: 2px solid Highlight !important;
    outline-offset: 2px !important;
  }
}
