@use "../../../styles/theme" as theme;
@use "sass:color";
@use "sass:map";

.chip {
  position: fixed;
  left: 50%;
  transform: translateX(-50%);
  z-index: 9999;
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-radius: theme.$border-radius-lg;
  font-weight: theme.$font-weight-bold;
  box-shadow: theme.$box-shadow-medium;
  max-width: 90vw;
  width: fit-content;
  min-width: 180px;
  opacity: 1;
  text-align: center;
  cursor: pointer;
  animation: fade-in 0.3s ease-out;
  transition:
    transform 0.3s ease-in-out,
    opacity 0.3s ease-in-out;

  &.fadeOut {
    opacity: 0;
    transform: translate(-50%, -10px);
  }

  &.topCenter {
    top: 20px;
  }

  &.bottomCenter {
    bottom: 20px;
  }

  &.topLeft {
    top: 20px;
    left: 20px;
    transform: none;
  }

  &.topRight {
    top: 20px;
    right: 20px;
    left: auto;
    transform: none;
  }

  &.bottomLeft {
    bottom: 20px;
    left: 20px;
    transform: none;
  }

  &.bottomRight {
    bottom: 20px;
    right: 20px;
    left: auto;
    transform: none;
  }
}

$chip-themes: (
  "primary": (
    bg: var(--primary-color),
    text: var(--text-color-primary),
  ),
  "secondary": (
    bg: var(--secondary-color),
    text: var(--text-color-secondary),
  ),
  "success": (
    bg: rgba(theme.$success-color, 0.9),
    text: var(--text-color-primary),
  ),
  "error": (
    bg: rgba(theme.$error-color, 0.9),
    text: var(--text-color-primary),
  ),
  "warning": (
    bg: rgba(theme.$warning-color, 0.9),
    text: var(--text-color-primary),
  ),
  "clear": (
    bg: rgb(1 1 1 / 20%),
    text: var(--text-color-primary),
    border: 1px solid var(--text-color-primary),
  ),
);

@each $name, $values in $chip-themes {
  .#{$name} {
    background-color: map.get($values, bg);
    color: map.get($values, text);

    @if map.get($values, border) {
      border: map.get($values, border);
    }
  }
}

.chipIcon {
  margin-right: theme.$spacing-sm;
  display: flex;
  align-items: center;
  margin-top: -0.1em;
}

.chipMessage {
  flex-grow: 1;
  margin-right: 12px;
}

.chipClose {
  background: transparent;
  border: none;
  font-size: 18px;
  font-weight: bold;
  cursor: pointer;
  color: inherit;
  transition:
    transform 0.2s ease-in-out,
    opacity 0.2s;

  &:hover {
    opacity: 0.7;
    transform: scale(1.2);
  }

  &:focus {
    outline: 2px solid var(--focus-outline-color);
    outline-offset: 2px;
  }
}

$chip-sizes: (
  "xs": (
    padding: 4px 8px,
    font: theme.$font-size-xs,
    icon: 1rem,
    height: 20px,
  ),
  "small": (
    padding: 6px 10px,
    font: theme.$font-size-sm,
    icon: 1rem,
    height: 20px,
  ),
  "medium": (
    padding: 6px 12px,
    font: theme.$font-size-md,
    icon: 1.2rem,
  ),
  "large": (
    padding: 6px 14px,
    font: theme.$font-size-lg,
    icon: 1.3rem,
  ),
  "xl": (
    padding: 10px 18px,
    font: theme.$font-size-xl,
    icon: 2rem,
  ),
);

@each $size, $props in $chip-sizes {
  .#{$size} {
    padding: map.get($props, padding);

    @if map.get($props, height) {
      height: map.get($props, height);
    }

    .chipMessage {
      font-size: map.get($props, font);
    }

    .icon {
      height: map.get($props, icon);
      width: map.get($props, icon);
    }
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
    transform: translate(-50%, -10px);
  }

  to {
    opacity: 1;
    transform: translate(-50%, 0);
  }
}
