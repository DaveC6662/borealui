@use "../../../styles/theme" as theme;
@use "../../../styles/globals";
@use "sass:color";
@use "sass:map";

.checkbox {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  gap: theme.$spacing-sm;
  font-size: theme.$font-size-base;
  user-select: none;
  position: relative;
  transition: all theme.$transition-default;
  background-color: transparent;
}

.checkbox_input {
  position: absolute;
  display: none;
  pointer-events: none;
  left: 0;
}

.checkbox_box {
  width: 18px;
  height: 18px;
  border-radius: 4px;
  border: 2px solid var(--text-color-primary);
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--text-color-primary);
  position: relative;
  transition: all theme.$transition-default;
}

.checkbox_box::after {
  content: "";
  width: 10px;
  height: 5px;
  border-left: 2px solid currentcolor;
  border-bottom: 2px solid currentcolor;
  transform: rotate(-45deg);
  opacity: 0;
  transition: all theme.$transition-default;
}

.checkbox_input:checked + .checkbox_box::after {
  opacity: 1;
}

.checkbox_box.checkbox_indeterminate::after {
  opacity: 1;
  content: "";
  width: 10px;
  height: 2px;
  background-color: currentcolor;
  border: none;
  transform: none;
}

.checkbox_label {
  color: var(--text-color-primary);
  font-size: theme.$font-size-sm;
}

.checkbox_disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

@each $theme, $props in theme.$themes {
  .checkbox_#{$theme} {
    color: map.get($props, bg);
  }

  .checkbox_box.checkbox_#{$theme} {
    border-color: map.get($props, bg);
  }

  .checkbox_input:checked + .checkbox_box.checkbox_#{$theme}::after {
    border-color: map.get($props, text);
  }
}
