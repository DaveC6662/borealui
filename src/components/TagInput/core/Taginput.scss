@use "../../../styles/theme" as theme;
@use "../../../styles/globals";
@use "sass:map";

$sizes: (
  "xs": (
    font-size: theme.$font-size-xs,
    padding: theme.$spacing-xxs theme.$spacing-xs,
  ),
  "small": (
    font-size: theme.$font-size-sm,
    padding: theme.$spacing-xxs theme.$spacing-xs,
  ),
  "medium": (
    font-size: theme.$font-size-md,
    padding: theme.$spacing-xs theme.$spacing-sm,
  ),
  "large": (
    font-size: theme.$font-size-base,
    padding: theme.$spacing-sm,
  ),
  "xl": (
    font-size: theme.$font-size-lg,
    padding: theme.$spacing-sm,
  ),
);

.tag_input {
  display: flex;
  position: relative;
  align-items: center;
  flex-wrap: wrap;
  gap: theme.$spacing-xxs;
  width: fit-content;
  border: 2px solid var(--background-light-color);
  border-radius: theme.$border-radius-lg;
  padding: theme.$spacing-xxs theme.$spacing-xs;
  transition: border-color theme.$transition-default;

  &:focus-within {
    border-color: var(--primary-color);
  }

  &_input_wrapper {
    list-style: none;

    li {
      list-style: none;
    }
  }

  &_tag_container {
    display: flex;
    max-width: 350px;
    max-height: 80px;
    flex-wrap: wrap;
    justify-items: space-between;
    align-items: center;
    gap: theme.$spacing-xs;
    width: fit-content;
    overflow-y: auto;
  }

  &_remove_button {
    color: theme.$error-color;
  }

  &_tag {
    display: flex;
    align-items: center;
    justify-content: space-evenly;
    width: fit-content;
    gap: theme.$spacing-xs;
    background-color: var(--primary-color);
    color: var(--text-color-primary);
    font-size: theme.$font-size-xs;
    padding: theme.$spacing-xxs theme.$spacing-xxs;
  }

  &_tag_label {
    padding: theme.$spacing-xxs;
  }

  &_suggestion_list {
    position: absolute;
    place-self: flex-end flex-end;
    inset: 80% 0 auto;
    width: fit-content;
    max-width: 300px;
    max-height: 200px;
    z-index: 10;
    display: flex;
    justify-content: right;
    flex-wrap: wrap;
    padding: 0;
    list-style: none;
    height: fit-content;
    overflow-y: auto;
  }

  &_suggestion_item {
    padding: theme.$spacing-xs theme.$spacing-sm;
    font-size: theme.$font-size-sm;
    font-weight: theme.$font-weight-bold;
    color: var(--text-color-primary);
    cursor: pointer;
    transition: background-color theme.$transition-default;

    &:hover,
    &:focus {
      background-color: var(--background-secondary-light-color);
    }
  }

  @each $theme, $color in theme.$themes {
    &_#{$theme} {
      .tag_input_tag {
        background-color: map.get($color, bg);
      }
    }
  }

  @each $state, $color in theme.$states {
    &_#{$state} {
      .tag_input_tag {
        border: 2px solid map.get($color, bg);
      }
    }
  }

  @each $size, $props in $sizes {
    &_#{$size} {
      .tag_input_tag {
        font-size: map.get($props, font-size);
        padding: map.get($props, padding);
      }
    }
  }
}

@each $key, $value in theme.$rounding {
  .tag_round-#{$key} {
    border-radius: $value;
  }
}

@each $key, $value in theme.$shadow {
  .tag_shadow-#{$key} {
    box-shadow: $value;
  }
}
