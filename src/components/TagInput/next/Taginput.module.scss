@use "../../../styles/theme" as theme;
@use "sass:map";

// ===== Theme Map =====
$themes: (
  "primary": var(--primary-color),
  "secondary": var(--secondary-color),
  "success": theme.$success-color,
  "error": theme.$error-color,
  "warning": theme.$warning-color,
  "clear": transparent,
);

// ===== Size Map =====
$sizes: (
  "xs": (
    font-size: theme.$font-size-xs,
    padding: theme.$spacing-xxs theme.$spacing-xs,
  ),
  "small": (
    font-size: theme.$font-size-sm,
    padding: theme.$spacing-xxs theme.$spacing-xs,
  ),
  "medium": (
    font-size: theme.$font-size-md,
    padding: theme.$spacing-xs theme.$spacing-sm,
  ),
  "large": (
    font-size: theme.$font-size-base,
    padding: theme.$spacing-sm,
  ),
  "xl": (
    font-size: theme.$font-size-lg,
    padding: theme.$spacing-sm,
  ),
);

// ===== Base Styles =====
.tagInput {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: theme.$spacing-xxs;
  border: 2px solid var(--background-light-color);
  border-radius: theme.$border-radius-lg;
  padding: theme.$spacing-xxs theme.$spacing-xs;
  transition: border-color theme.$transition-default;

  &:focus-within {
    border-color: var(--primary-color);
  }
}

.inputWrapper {
  list-style: none;

  li {
    list-style: none;
  }
}

.tagContainer {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: theme.$spacing-xs;
  width: 100%;
}

.tag {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: theme.$spacing-md;
  background-color: var(--primary-color);
  color: var(--text-color-primary);
  border-radius: theme.$border-radius-md;
  font-weight: theme.$font-weight-bold;
  font-size: theme.$font-size-sm;
  padding: theme.$spacing-xs theme.$spacing-sm;

  .tagLabel {
    padding: theme.$spacing-xs;
  }
}

@each $theme, $color in $themes {
  .#{$theme} {
    .tag {
      background-color: $color;

      @if $theme == "clear" {
        border: 1px solid var(--text-color-primary);
      }
    }
  }
}

@each $size, $props in $sizes {
  .#{$size} {
    .tag {
      font-size: map.get($props, font-size);
      padding: map.get($props, padding);
    }
  }
}
