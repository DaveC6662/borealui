@use "../../../styles/theme" as theme;
@use "../../../styles/_breakpoints" as bp;
@use "../../../styles/globals";
@use "sass:map";

$sizes: (
  "xs": theme.$font-size-sm,
  "small": theme.$font-size-md,
  "medium": theme.$font-size-base,
  "large": theme.$font-size-lg,
  "xl": theme.$font-size-xl,
);

.rating_container {
  display: flex;
  align-items: center;
  gap: theme.$spacing-sm;

  @include bp.down(xs) {
    gap: theme.$spacing-xs;
  }

  @include bp.up(lg) {
    gap: theme.$spacing-md;
  }
}

.rating {
  display: flex;
  align-items: center;
  gap: theme.$spacing-xs;

  @include bp.down(xs) {
    gap: theme.$spacing-xxs;
  }

  @include bp.up(lg) {
    gap: theme.$spacing-sm;
  }

  @each $size, $font-size in $sizes {
    &_#{$size} {
      font-size: $font-size;

      @include bp.up(lg) {
        font-size: calc(#{$font-size} * 1.05);
      }
    }
  }

  &_label {
    font-size: theme.$font-size-md;
    line-height: 1;
    color: var(--text-color-primary);
    margin: 0;
    display: inline-flex;
    align-items: center;

    @include bp.down(xs) {
      font-size: theme.$font-size-sm;
    }

    @include bp.up(lg) {
      font-size: theme.$font-size-lg;
    }
  }

  &_star {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 2px;
    border-radius: 4px;
    transition:
      color 0.3s ease-in-out,
      transform 0.2s ease;
    color: var(--background-color-dark);

    svg {
      width: 1em;
      height: 1em;
      display: block;

      @include bp.up(lg) {
        width: 1.05em;
        height: 1.05em;
      }
    }
  }

  &_active {
    color: var(--primary-color);
  }

  @each $themeName, $vals in theme.$themes {
    &_#{$themeName} {
      .rating_active {
        color: map.get($vals, bg);
      }
    }
  }

  @each $stateName, $vals in theme.$states {
    &_#{$stateName} {
      .rating_active {
        color: map.get($vals, bg);
      }
    }
  }

  &_clear {
    .rating_active {
      color: var(--text-color-primary);
    }
  }
}

.rating_interactive .rating_star:hover {
  cursor: pointer;
  transform: scale(1.2);

  @include bp.down(xs) {
    transform: scale(1.1);
  }
}

.rating_interactive .rating_star:focus-visible {
  outline: 2px solid var(--focus-outline-color, var(--primary-color));
  outline-offset: 2px;
}

.rating:focus-within {
  outline: 2px solid var(--focus-outline-color, var(--primary-color));
  outline-offset: 4px;
  border-radius: 6px;
}

@media (prefers-reduced-motion: reduce) {
  .rating_star,
  .rating {
    transition: none !important;
  }

  .rating_interactive .rating_star:hover {
    transform: none !important;
  }
}

@media (hover: none) {
  .rating_interactive .rating_star:hover {
    transform: none;
  }
}

@media (forced-colors: active) {
  .rating_star {
    color: ButtonText;
  }

  .rating_active {
    color: Highlight;
  }

  .rating_interactive .rating_star:focus-visible {
    outline: 2px solid Highlight;
    outline-offset: 2px;
  }
}
