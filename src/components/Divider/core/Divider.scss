@use "../../../styles/theme" as theme;
@use "../../../styles/_breakpoints" as bp;
@use "../../../styles/globals";
@use "sass:color";
@use "sass:map";

.divider {
  display: block;
  margin: 0 auto;
  flex-shrink: 0;
  transition: all theme.$transition-default;
  background-color: var(--text-color-primary);
  border-color: var(--text-color-primary);
  border: none;

  &_horizontal {
    width: 100%;
    height: 1px;
    margin: theme.$spacing-sm 0;

    @include bp.down(sm) {
      margin: theme.$spacing-xs 0;
    }

    @include bp.up(lg) {
      height: 2px;
      margin: theme.$spacing-md 0;
    }
  }

  &_vertical {
    width: 1px;
    height: 100%;
    margin: 0 theme.$spacing-sm;

    @include bp.down(sm) {
      margin: 0 theme.$spacing-xs;
    }

    @include bp.up(lg) {
      width: 2px;
      margin: 0 theme.$spacing-md;
    }
  }

  &_dashed {
    background-color: transparent;
    border-color: transparent;

    &.divider_horizontal {
      height: 0;
      border-top: 1px dashed currentcolor;

      @include bp.up(lg) {
        border-top-width: 2px;
      }
    }

    &.divider_vertical {
      width: 0;
      border-left: 1px dashed currentcolor;

      @include bp.up(lg) {
        border-left-width: 2px;
      }
    }
  }

  &_disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }

  @each $theme, $values in theme.$themes {
    &_#{$theme} {
      background-color: map.get($values, border);
      border-color: map.get($values, border);
    }
    &_#{$theme}.divider_dashed {
      color: map.get($values, border);
    }
  }

  @each $state, $values in theme.$states {
    &_#{$state} {
      background-color: map.get($values, border);
      border-color: map.get($values, border);
    }
    &_#{$state}.divider_dashed {
      color: map.get($values, border);
    }
  }
}

@media (prefers-reduced-motion: reduce) {
  .divider {
    transition: none !important;
  }
}

@media (forced-colors: active) {
  .divider {
    background: ButtonText;
    border-color: ButtonText;
  }

  .divider.divider_dashed {
    background: transparent;
    border-color: transparent;
  }

  .divider.divider_dashed.divider_horizontal {
    border-top: 1px dashed ButtonText;
  }

  .divider.divider_dashed.divider_vertical {
    border-left: 1px dashed ButtonText;
  }
}
