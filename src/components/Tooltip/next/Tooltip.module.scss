@use "../../../styles/theme" as theme;
@use "../../../styles/_breakpoints" as bp;
@use "../../../styles/globals";
@use "sass:map";

$positions: (
  "top": (
    tooltip: (
      bottom: 100%,
      left: 50%,
      transform: translateX(-50%),
      margin-bottom: 8px,
    ),
    arrow: (
      top: 100%,
      left: 50%,
      transform: translateX(-50%),
    ),
  ),
  "bottom": (
    tooltip: (
      top: 100%,
      left: 50%,
      transform: translateX(-50%),
      margin-top: 8px,
    ),
    arrow: (
      bottom: 100%,
      left: 50%,
      transform: translateX(-50%),
    ),
  ),
  "left": (
    tooltip: (
      right: 100%,
      top: 50%,
      transform: translateY(-50%),
      margin-right: 8px,
    ),
    arrow: (
      left: 98%,
      top: 50%,
      transform: translateY(-50%) rotate(-180deg),
    ),
  ),
  "right": (
    tooltip: (
      left: 100%,
      top: 50%,
      transform: translateY(-50%),
      margin-left: 8px,
    ),
    arrow: (
      right: 99%,
      top: 50%,
      transform: translateY(-50%) rotate(180deg),
    ),
  ),
);

.container {
  position: relative;
  display: inline-block;

  &:hover .tooltip {
    opacity: 1;
    visibility: visible;
  }

  &:focus-within {
    outline: 2px solid var(--focus-outline-color, var(--primary-color));
    outline-offset: 2px;
    border-radius: theme.$border-radius-sm;
  }
}

.tooltip {
  position: absolute;
  color: var(--text-color-primary);
  background-color: var(--primary-color);
  padding: theme.$spacing-xs theme.$spacing-sm;
  font-size: theme.$font-size-sm;
  white-space: nowrap;
  opacity: 0;
  visibility: hidden;
  z-index: 100;
  transition:
    opacity 0.3s ease-in-out,
    transform 0.2s ease-in-out;

  @include bp.down(xs) {
    font-size: theme.$font-size-xs;
    padding: theme.$spacing-xxs theme.$spacing-xs;
    white-space: normal;
  }

  &::after {
    content: "";
    position: absolute;
    border-style: solid;
    transform-origin: 50% 50%;
    border-width: 6px;
    border-color: var(--primary-color) transparent transparent transparent;
  }

  &:focus-visible {
    outline: 2px solid var(--focus-outline-color, var(--primary-color));
    outline-offset: 2px;
    border-radius: theme.$border-radius-sm;
  }
}

@each $position, $config in $positions {
  .#{$position} {
    @each $prop, $val in map.get($config, tooltip) {
      #{$prop}: $val;
    }

    &::after {
      @each $prop, $val in map.get($config, arrow) {
        #{$prop}: $val;
      }
    }
  }
}

@each $name, $vals in theme.$themes {
  .#{$name} {
    background-color: map.get($vals, bg);
    color: map.get($vals, text, var(--text-color-primary));

    &::after {
      border-color: map.get($vals, bg) transparent transparent transparent;
    }

    &.bottom::after {
      border-color: transparent transparent map.get($vals, bg) transparent;
    }

    &.left::after {
      border-color: transparent map.get($vals, bg) transparent transparent;
    }

    &.right::after {
      border-color: transparent transparent transparent map.get($vals, bg);
    }

    &.secondary {
      color: var(--text-color-secondary);
    }
  }
}

@each $name, $vals in theme.$states {
  .#{$name} {
    background-color: map.get($vals, bg);
    color: map.get($vals, text, var(--text-color-primary));

    &::after {
      border-color: map.get($vals, border) transparent transparent transparent;
    }

    &.bottom::after {
      border-color: transparent transparent map.get($vals, border) transparent;
    }

    &.left::after {
      border-color: transparent map.get($vals, border) transparent transparent;
    }

    &.right::after {
      border-color: transparent transparent transparent map.get($vals, border);
    }

    &.secondary {
      color: var(--text-color-secondary);
    }
  }
}

.clear {
  box-shadow: none;
  border: 2px solid var(--text-color-primary);
  background-color: map.get(theme.$themes, clear, hover);

  &::after {
    border-color: map.get(theme.$themes, clear, hover) transparent transparent
      transparent;
  }
}

@each $key, $value in theme.$rounding {
  .round#{$key} {
    border-radius: $value;
  }
}

@each $key, $value in theme.$shadow {
  .shadow#{$key} {
    box-shadow: $value;
  }
}

@media (prefers-reduced-motion: reduce) {
  .tooltip,
  .container * {
    transition: none !important;
    animation: none !important;
  }
}

@media (hover: none) {
  .container:hover .tooltip {
    opacity: 0;
    visibility: hidden;
  }
}

@media (forced-colors: active) {
  .tooltip {
    background: CanvasText !important;
    color: Canvas !important;
    border: 1px solid ButtonText;
  }

  .top::after {
    border-color: CanvasText transparent transparent !important;
  }

  .bottom::after {
    border-color: transparent transparent CanvasText !important;
  }

  .left::after {
    border-color: transparent CanvasText transparent transparent !important;
  }

  .right::after {
    border-color: transparent transparent transparent CanvasText !important;
  }
}
