@use "../../../styles/theme" as theme;
@use "sass:map";

$position-popover: (
  "top": (
    bottom: 100%,
    left: 50%,
    transform: translateX(-50%) translateY(-8px),
  ),
  "bottom": (
    top: 100%,
    left: 50%,
    transform: translateX(-50%) translateY(8px),
  ),
  "left": (
    right: 100%,
    top: 50%,
    transform: translateX(-8px) translateY(-50%),
  ),
  "right": (
    left: 100%,
    top: 50%,
    transform: translateX(8px) translateY(-50%),
  ),
);

.container {
  position: relative;
  display: inline-block;
}

.trigger {
  cursor: pointer;
  outline: none;

  &:focus-visible {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
  }
}

.popover {
  position: absolute;
  z-index: 1000;
  max-width: 90vw;
  min-width: 150px;
  padding: theme.$spacing-sm;
  border-radius: theme.$border-radius-md;
  background-color: var(--background-light-color);
  color: var(--text-color-secondary);
  border: 1px solid var(--text-color-secondary);
  box-shadow: theme.$box-shadow-medium;
  animation: fade-in-up 0.25s ease-in-out forwards;

  @each $name, $values in theme.$themes {
    &.#{$name} {
      background-color: map.get($values, bg);
      color: map.get($values, text);
      box-shadow: if(
        map.has-key($values, shadow),
        map.get($values, shadow),
        theme.$box-shadow-medium
      );
      border: if(
        map.has-key($values, border),
        map.get($values, border),
        1px solid var(--text-color-secondary)
      );
    }
  }

  @each $pos, $props in $position-popover {
    &.#{$pos} {
      @each $prop, $val in $props {
        #{$prop}: $val;
      }
    }
  }

  @media (width <= 640px) {
    &.left,
    &.right {
      top: 100%;
      left: 50%;
      right: auto;
      transform: translateX(-50%) translateY(8px) !important;
    }
  }
}

.popover::after {
  content: none !important;
  display: none !important;
}
