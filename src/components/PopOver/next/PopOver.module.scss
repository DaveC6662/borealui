@use "../../../styles/theme" as theme;
@use "../../../styles/globals";
@use "sass:map";

.container {
  position: relative;
  display: inline-block;
  width: fit-content;
}

.trigger {
  cursor: pointer;
  outline: none;

  &:focus-visible {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
  }
}

.popover {
  position: absolute;
  z-index: 1000;
  max-width: 90vw;
  min-width: 100%;
  width: max-content;
  padding: theme.$spacing-sm;
  background-color: var(--background-light-color);
  color: var(--text-color-secondary);
  border: 1px solid var(--text-color-secondary);
  animation: fade-in 0.25s ease-in-out forwards;

  @each $name, $values in theme.$themes {
    &.#{$name} {
      background-color: map.get($values, bg);
      color: map.get($values, text);
      border: if(
        map.has-key($values, border),
        map.get($values, border),
        1px solid var(--text-color-secondary)
      );
    }
  }

  @each $name, $values in theme.$states {
    &.#{$name} {
      background-color: map.get($values, bg);
      color: map.get($values, text);
      box-shadow: if(
        map.has-key($values, shadow),
        map.get($values, shadow),
        theme.$box-shadow-medium
      );
      border: if(
        map.has-key($values, border),
        map.get($values, border),
        1px solid var(--text-color-secondary)
      );
    }
  }

  &.clear {
    box-shadow: none;
    border: 1px solid var(--text-color-primary);
  }

  &::after {
    content: none !important;
    display: none !important;
  }
}

.top {
  bottom: 95%;
  left: 50%;
  transform: translateX(-50%) translateY(-10px);
}

.bottom {
  top: 100%;
  left: 50%;
  transform: translateX(-50%) translateY(10px);
}

.left {
  right: 100%;
  top: 50%;
  transform: translateX(-8px) translateY(-50%);
}

.right {
  left: 100%;
  top: 50%;
  transform: translateX(8px) translateY(-50%);
}

@each $key, $value in theme.$rounding {
  .round#{$key} {
    border-radius: $value;
  }
}

@each $key, $value in theme.$shadow {
  .shadow#{$key} {
    box-shadow: $value;
  }
}
