@use "../../../styles/theme" as theme;
@use "../../../styles/_breakpoints" as bp;
@use "../../../styles/globals";
@use "sass:map";

.file_upload {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: theme.$spacing-sm;
  padding: theme.$spacing-md;
  text-align: center;
  background-color: var(--background-color-light);
  border: 2px dashed var(--background-color-darker);
  transition: theme.$transition-default;
  max-width: 300px;

  @include bp.down(md) {
    padding: theme.$spacing-md;
    max-width: 100%;
  }
  @include bp.down(xs) {
    padding: theme.$spacing-sm;
  }
  @include bp.up(lg) {
    max-width: 420px;
  }

  &:hover {
    background-color: var(--background-color-lighter);
  }

  &:focus-visible,
  &:focus-within {
    outline: 2px solid var(--focus-outline-color, var(--primary-color));
    outline-offset: 3px;
  }

  &.file_upload_dragover,
  &[data-drag-active="true"] {
    background-color: var(--background-color-lighter);
    border-color: var(--focus-outline-color, var(--primary-color));
  }

  @each $key, $value in theme.$rounding {
    &_round-#{$key} {
      border-radius: $value;
    }
  }

  @each $key, $value in theme.$shadow {
    &_shadow-#{$key} {
      box-shadow: $value;
    }
  }

  @each $theme, $values in theme.$themes {
    &_#{$theme}:hover {
      border-color: map.get($values, border);
    }
  }

  @each $state, $values in theme.$states {
    &_#{$state} {
      border-color: map.get($values, border);
    }
    &_#{$state}:hover {
      border-color: map.get($values, hover);
    }
  }

  &_disabled {
    background-color: var(--background-color-light);
    border-color: var(--background-color-darker);
    cursor: not-allowed;
    pointer-events: none;
    opacity: 0.6;
  }

  &_upload_actions {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &_upload_controls {
    display: flex;
    flex-direction: column;
    gap: theme.$spacing-sm;
    align-items: center;
    width: 100%;

    @include bp.up(lg) {
      gap: theme.$spacing-md;
    }
  }

  &_upload_progress {
    width: 100%;
    margin-top: theme.$spacing-sm;
  }

  &_upload_button {
    align-self: center;
  }

  &_remove_button {
    border: none !important;
    box-shadow: none !important;
  }

  &_hidden_input {
    display: none;
  }

  &_file_list {
    margin: theme.$spacing-sm 0;
    padding: 0;
    list-style: none;
    font-size: theme.$font-size-sm;
    color: var(--text-color-secondary);

    @include bp.down(xs) {
      font-size: theme.$font-size-xs;
    }
    @include bp.up(lg) {
      font-size: theme.$font-size-base;
    }
  }

  &_file_list_item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: theme.$spacing-sm;
    padding: 2px 0;
    font-size: theme.$font-size-sm;
    text-overflow: ellipsis;

    > :first-child {
      flex: 1 1 auto;
      min-width: 0;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;

      @include bp.down(xs) {
        white-space: normal;
      }
    }

    @include bp.down(xs) {
      gap: theme.$spacing-xxs;
    }
  }

  &_rejected_files {
    margin-top: theme.$spacing-sm;
    color: var(--error-color);
    font-size: theme.$font-size-sm;

    @include bp.down(xs) {
      font-size: theme.$font-size-xs;
    }
  }

  &_rejected_label {
    font-weight: theme.$font-weight-bold;
    margin-bottom: theme.$spacing-xs;
  }

  &_rejected_list {
    list-style: disc;
    padding-left: theme.$spacing-md;
  }
  &_rejected_item {
    margin-bottom: 2px;
  }
}

@each $key, $value in theme.$rounding {
  .file_upload_round-#{$key} {
    border-radius: $value;
  }
}
@each $key, $value in theme.$shadow {
  .file_upload_shadow-#{$key} {
    box-shadow: $value;
  }
}

@media (prefers-reduced-motion: reduce) {
  .file_upload,
  .file_upload * {
    transition: none !important;
    animation: none !important;
  }
}

@media (hover: none) {
  .file_upload:hover {
    background-color: var(--background-color-light);
  }
}

@media (forced-colors: active) {
  .file_upload {
    background: Canvas;
    color: CanvasText;
    border: 1px dashed ButtonText;
    outline-color: Highlight;
  }
  .file_upload:focus-visible,
  .file_upload:focus-within {
    outline: 2px solid Highlight;
    outline-offset: 3px;
  }
}
