@use "../../../styles/theme" as theme;
@use "../../../styles/_breakpoints" as bp;
@use "../../../styles/globals";
@use "sass:map";

.footer {
  display: flex;
  justify-content: center;
  width: 100%;

  @each $theme, $values in theme.$themes {
    &.#{$theme} {
      background-color: map.get($values, bg);
      color: map.get($values, text);
    }
  }

  @each $key, $value in theme.$rounding {
    &.round#{$key} {
      border-top-left-radius: $value;
      border-top-right-radius: $value;
    }
  }
  @each $key, $value in theme.$shadow {
    &.shadow#{$key} {
      box-shadow: $value;
    }
  }

  &.attachmentStatic {
    position: static;
  }

  &.attachmentSticky {
    position: sticky;
    bottom: 0;
    left: 0;
    width: 100%;
    z-index: 100;
    padding-bottom: env(safe-area-inset-bottom, 0);
  }

  &.attachmentFixed {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    z-index: 200;
    padding-bottom: env(safe-area-inset-bottom, 0);
  }
}

.content {
  width: 100%;
  max-width: 1280px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  padding: theme.$spacing-md;
  gap: theme.$spacing-sm;

  @include bp.down(lg) {
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    gap: theme.$spacing-md;
  }

  .left {
    display: flex;
    align-items: center;

    p {
      font-size: theme.$font-size-sm;
      color: var(--text-color-primary);
      margin: 0;

      @include bp.up(lg) {
        font-size: theme.$font-size-base;
      }
    }

    @include bp.down(lg) {
      flex-direction: column;
      align-items: center;
      justify-content: center;
      text-align: center;
      gap: theme.$spacing-md;
    }
  }

  .links {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: theme.$spacing-md;
    padding-left: theme.$spacing-lg;

    ul {
      list-style: none;
      display: flex;
      gap: theme.$spacing-md;
      padding: 0;
      margin: 0;
    }

    li {
      display: inline;
    }

    a {
      text-decoration: none;
      font-size: theme.$font-size-sm;
      color: var(--text-color-primary);

      &:hover {
        text-decoration: underline;
      }

      &:focus-visible {
        outline: 2px solid var(--focus-outline-color, var(--primary-color));
        outline-offset: 2px;
        border-radius: 4px;
      }
    }

    @include bp.down(lg) {
      padding-left: 0;

      ul {
        flex-direction: column;
        align-items: center;
        gap: theme.$spacing-xs;
      }
    }
  }

  .logo {
    max-height: 20px;
    margin-right: theme.$spacing-lg;

    img {
      max-height: 100%;
    }
    svg {
      height: 1em;
      width: 1em;
    }

    @include bp.down(lg) {
      margin: auto;
    }
  }

  .social {
    display: flex;
    flex-wrap: wrap;
    gap: theme.$spacing-xs;
    margin-left: auto;

    @include bp.down(lg) {
      margin-left: 0;
      justify-content: center;
    }

    @include bp.down(xs) {
      flex-wrap: wrap;
    }
  }

  .themeToggle {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-left: auto;

    @include bp.down(lg) {
      margin-left: 0;
      margin-top: theme.$spacing-xs;
    }

    &:focus-visible {
      outline: 2px solid var(--focus-outline-color, var(--primary-color));
      outline-offset: 2px;
      border-radius: 6px;
    }
  }
}

@each $key, $value in theme.$rounding {
  .round#{$key} {
    border-top-left-radius: $value;
    border-top-right-radius: $value;
  }
}
@each $key, $value in theme.$shadow {
  .shadow#{$key} {
    box-shadow: $value;
  }
}

@media (prefers-reduced-motion: reduce) {
  .footer,
  .footer * {
    transition: none !important;
    animation: none !important;
  }
}

@media (forced-colors: active) {
  .footer {
    background: Canvas;
    color: CanvasText;
    outline-color: Highlight;
    border-top: 1px solid ButtonText;
  }

  .content .links a {
    color: LinkText;
    text-decoration-color: LinkText;
  }
}
