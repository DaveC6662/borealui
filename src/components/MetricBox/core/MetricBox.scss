@use "../../../styles/theme" as theme;
@use "../../../styles/_breakpoints" as bp;
@use "../../../styles/globals";
@use "sass:color";
@use "sass:map";

.metricBox {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background: var(--background-primary-light-color);
  min-width: 120px;
  width: max-content;
  max-width: 100%;
  height: fit-content;
  text-align: center;
  margin: theme.$spacing-sm;
  transition: theme.$transition-default;
  gap: theme.$spacing-sm;

  @include bp.up(xs) {
    padding: theme.$spacing-sm;
  }

  @include bp.down(sm) {
    gap: theme.$spacing-xs;
    margin: theme.$spacing-xs;
  }

  @include bp.up(lg) {
    gap: theme.$spacing-md;
    margin: theme.$spacing-md;
    min-width: 140px;
  }

  &:focus-visible {
    outline: 2px solid var(--focus-outline-color, var(--primary-color));
    outline-offset: 3px;
    border-radius: 8px;
  }

  &_icon {
    font-size: 2rem;
    color: inherit;
    padding: 0;

    @include bp.down(sm) {
      font-size: 1.8rem;
    }

    @include bp.up(lg) {
      font-size: 2.2rem;
    }
  }

  @each $key, $value in theme.$rounding {
    &_round-#{$key} {
      border-radius: $value;
    }
  }

  @each $key, $value in theme.$shadow {
    &_shadow-#{$key} {
      box-shadow: $value;
    }
  }

  @each $theme, $properties in theme.$themes {
    &_#{$theme} {
      background-color: map.get($properties, bg);
      color: map.get($properties, color);

      .metricBox_title {
        color: map.get($properties, color);
      }

      .metricBox_subtext {
        color: map.get($properties, color);
      }

      &.metricBox_outline {
        border: 2px solid map.get($properties, border);
        background-color: transparent;

        @include bp.down(sm) {
          border-width: 1.5px;
        }
      }
    }

    &_#{$theme}.metricBox_outline .metricBox_icon {
      color: map.get($properties, border);
    }
  }

  @each $state, $properties in theme.$states {
    &_#{$state} {
      background-color: map.get($properties, bg);
      color: map.get($properties, color);

      .metricBox_title {
        color: map.get($properties, color);
      }

      .metricBox_subtext {
        color: map.get($properties, color);
      }

      &.metricBox_outline {
        border: 2px solid map.get($properties, border);
        background-color: transparent;

        @include bp.down(sm) {
          border-width: 1.5px;
        }
      }
    }

    &_#{$state}.metricBox_outline .metricBox_icon {
      color: map.get($properties, bg);
    }
  }

  &_clear {
    border: none;
  }

  &_content {
    display: flex;
    flex-direction: column;
    align-items: inherit;
    padding: theme.$spacing-sm;

    @include bp.up(lg) {
      padding: theme.$spacing-md;
    }
  }

  &_title {
    font-size: theme.$font-size-sm;
    color: var(--text-color-primary);

    @include bp.down(sm) {
      font-size: theme.$font-size-xs;
    }

    @include bp.up(lg) {
      font-size: theme.$font-size-base;
    }
  }

  &_value {
    font-size: theme.$font-size-lg;
    font-weight: theme.$font-weight-bold;

    @include bp.down(sm) {
      font-size: theme.$font-size-md;
    }

    @include bp.up(lg) {
      font-size: theme.$font-size-xl;
    }
  }

  &_left {
    align-items: flex-start;
    text-align: left;
  }

  &_right {
    align-items: flex-end;
    text-align: right;
  }

  $size-variations: (
    "xs": (
      icon-size: 1.5rem,
      title-size: theme.$font-size-xs,
      value-size: theme.$font-size-sm,
      subtext-size: theme.$font-size-xs,
    ),
    "small": (
      icon-size: 2rem,
      title-size: theme.$font-size-sm,
      value-size: theme.$font-size-md,
      subtext-size: theme.$font-size-sm,
    ),
    "medium": (
      icon-size: 2rem,
      title-size: theme.$font-size-base,
      value-size: theme.$font-size-lg,
      subtext-size: theme.$font-size-base,
    ),
    "large": (
      icon-size: 2.5rem,
      title-size: theme.$font-size-lg,
      value-size: theme.$font-size-xl,
      subtext-size: theme.$font-size-lg,
    ),
    "xl": (
      icon-size: 2.5rem,
      title-size: theme.$font-size-xl,
      value-size: theme.$font-size-xl,
      subtext-size: theme.$font-size-lg,
    ),
  );

  @each $size, $properties in $size-variations {
    &_#{$size} {
      .metricBox_icon {
        font-size: map.get($properties, icon-size);
      }

      .metricBox_title {
        font-size: map.get($properties, title-size);
      }

      .metricBox_value {
        font-size: map.get($properties, value-size);
      }

      .metricBox_subtext {
        font-size: map.get($properties, subtext-size);
      }
    }
  }

  &_subtext {
    font-size: theme.$font-size-xs !important;
    color: var(--text-color-primary);
    opacity: 0.7;

    @include bp.up(lg) {
      font-size: theme.$font-size-md !important;
    }
  }
}

@media (prefers-reduced-motion: reduce) {
  .metricBox,
  .metricBox * {
    transition: none !important;
    animation: none !important;
  }
}

@media (forced-colors: active) {
  .metricBox {
    background: Canvas;
    color: CanvasText;
    outline-color: Highlight;
  }

  .metricBox.metricBox_outline {
    border: 1px solid ButtonText;
  }
}
