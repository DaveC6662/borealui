@use "../../../styles/theme" as theme;
@use "../../../styles/globals";

.dropdown {
  position: relative;
  display: inline-block;
  outline: none;

  &_trigger {
    cursor: pointer;
    display: inline-flex;
    align-items: center;
  }

  &_menu {
    position: absolute;
    top: 100%;
    overflow: hidden;
    margin-top: theme.$spacing-xs;
    background-color: var(--background-color-lighter);
    z-index: theme.$z-index-drawer;
    padding: theme.$spacing-xs 0;
    min-width: 200px;
    animation: fade-in 0.2s ease-in-out;

    &_right {
      right: 0;
      transform: translateX(0);
    }

    &_left {
      left: 0;
      transform: translateX(0);
    }

    @media (width >= 481px) {
      &[data-overflow-right="true"] {
        left: auto;
        right: 0;
      }

      &[data-overflow-left="true"] {
        right: auto;
        left: 0;
      }
    }

    @media (width <= 480px) {
      position: fixed;
      inset: auto 0 0;
      margin: 0;
      border-radius: 0;
      min-width: 100%;
      max-height: 50vh;
      overflow-y: auto;
      padding: theme.$spacing-sm 0;
      animation: slide-up 0.3s ease-in-out;
    }
  }

  &_item {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: theme.$spacing-sm;
    line-height: 1em;
    width: 100%;
    background: none;
    border: none;
    padding: theme.$spacing-sm theme.$spacing-md;
    font-weight: theme.$font-weight-bold;
    color: var(--text-color-primary);
    font-size: theme.$font-size-md;
    cursor: pointer;
    text-align: left;
    transition: background-color 0.2s ease-in-out;

    &:hover,
    &:focus {
      background-color: var(--background-color-dark);
      color: var(--text-color-primary);
      outline: none;
    }

    &_icon {
      margin-right: theme.$spacing-xs;
      display: flex;
      align-items: center;
    }

    @media (width <= 480px) {
      font-size: theme.$font-size-base;
      padding: theme.$spacing-md;
    }
  }

  a.dropdown_item {
    text-decoration: none;
  }
}

@each $key, $value in theme.$rounding {
  .menu_round-#{$key} {
    border-radius: $value;
  }
}

@each $key, $value in theme.$shadow {
  .menu_shadow-#{$key} {
    box-shadow: $value;
  }
}
