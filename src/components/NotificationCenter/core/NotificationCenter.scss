@use "../../../styles/theme" as theme;
@use "../../../styles/globals";
@use "sass:color";
@use "sass:map";

$notification-colors: (
  primary: var(--primary-color),
  success: theme.$success-color,
  error: theme.$error-color,
  warning: theme.$warning-color,
  info: var(--link-color),
);

.notification_center {
  position: relative;
  width: 100%;
  max-width: 400px;
  padding: theme.$spacing-sm;
  overflow: hidden;

  &_header {
    display: flex;
    justify-content: space-between;
    font-weight: theme.$font-weight-bold;
    margin-bottom: theme.$spacing-sm;

    &_clearAll {
      &:hover {
        opacity: 0.8;
      }
    }
  }

  &_list {
    display: flex;
    flex-direction: column;
    gap: theme.$spacing-xs;
    margin: 0;
    padding: 0;
    list-style: none;
    max-height: 330px;
    overflow-y: auto;
  }

  &_notification {
    display: flex;
    align-items: center;
    padding: theme.$spacing-xs;
    background-color: var(--background-color-dark);
    border-left: 4px solid transparent;
    animation: fade-in-up 0.3s ease;
  }

  &_icon {
    margin-right: theme.$spacing-sm;
    font-size: 1.2rem;
  }

  .notification_center_content {
    flex-grow: 1;

    .notification_center_message {
      display: block;
      font-size: theme.$font-size-base;
    }

    .notification_center_timestamp {
      font-size: theme.$font-size-sm;
      color: var(--text-color-secondary);
    }
  }

  .notification_center_close {
    margin-left: theme.$spacing-sm;
    border: none;
    box-shadow: none;

    &:hover {
      opacity: 0.7;
    }
  }

  @each $type, $color in $notification-colors {
    &_#{$type} {
      border-color: $color;
    }
  }
}

@each $key, $value in theme.$rounding {
  .notification_center_round-#{$key} {
    border-radius: $value;
  }
}

@each $key, $value in theme.$shadow {
  .notification_center_shadow-#{$key} {
    box-shadow: $value;
  }
}
