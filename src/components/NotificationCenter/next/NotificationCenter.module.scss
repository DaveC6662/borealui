@use "../../../styles/theme" as theme;
@use "../../../styles/animations";
@use "sass:color";
@use "sass:map";

$notification-colors: (
  primary: var(--primary-color),
  success: theme.$success-color,
  error: theme.$error-color,
  warning: theme.$warning-color,
  info: var(--link-color),
);

.wrapper {
  position: relative;
  width: 100%;
  max-width: 400px;
  padding: theme.$spacing-sm;
  overflow: hidden;
}

.header {
  display: flex;
  justify-content: space-between;
  font-weight: theme.$font-weight-bold;
  margin-bottom: theme.$spacing-sm;

  .clearAll {
    &:hover {
      opacity: 0.8;
    }
  }
}

.list {
  display: flex;
  width: fit-content;
  height: fit-content;
  flex-direction: column;
  gap: theme.$spacing-xs;
  margin: 0;
  padding: 4px;
  list-style: none;
  max-height: 340px;
  overflow-y: auto;
}

.notification {
  display: flex;
  align-items: center;
  padding: theme.$spacing-xs;
  border-radius: theme.$border-radius-xs;
  background-color: var(--background-color-dark);
  box-shadow: theme.$box-shadow-light;
  border-left: 4px solid transparent;
  animation: fade-in-up 0.3s ease;

  .icon {
    margin-right: theme.$spacing-sm;
    font-size: 1.2rem;
  }

  .content {
    flex-grow: 1;

    .message {
      display: block;
      font-size: theme.$font-size-base;
    }

    .timestamp {
      font-size: theme.$font-size-sm;
      color: theme.$disabled-color;
    }
  }

  .close {
    margin-left: theme.$spacing-sm;
    border: none;
    box-shadow: none;

    &:hover {
      opacity: 0.7;
    }
  }

  @each $type, $color in $notification-colors {
    &.#{$type} {
      border-color: $color;
    }
  }
}

@each $key, $value in theme.$rounding {
  .round#{$key} {
    border-radius: $value;
  }
}

@each $key, $value in theme.$shadow {
  .shadow#{$key} {
    box-shadow: $value;
  }
}
