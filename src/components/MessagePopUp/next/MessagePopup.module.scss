@use "../../../styles/theme" as theme;
@use "../../../styles/_breakpoints" as bp;

.wrapper {
  position: fixed;
  inset: 0;
  width: 100vw;
  height: 100vh;
  background: rgb(0 0 0 / 50%);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  transition: opacity 0.3s ease-in-out;
  padding: env(safe-area-inset-top, 0) env(safe-area-inset-right, 0)
    env(safe-area-inset-bottom, 0) env(safe-area-inset-left, 0);

  &.isHidden {
    opacity: 0;
    pointer-events: none;
  }
}

.content {
  background: var(--background-color-light);
  color: var(--text-color-primary);
  position: relative;
  text-align: center;
  width: 92%;
  max-width: 400px;
  padding: theme.$spacing-lg theme.$spacing-lg;
  padding-top: 50px;
  max-height: 80vh;
  overflow: auto;

  @include bp.down(sm) {
    width: 94%;
    max-width: 360px;
    padding: theme.$spacing-md;
    padding-top: calc(theme.$spacing-lg * 1.2);
  }

  @include bp.up(lg) {
    max-width: 520px;
    padding: theme.$spacing-lg;
    padding-top: calc(theme.$spacing-lg * 1.1);
  }

  &:focus-visible {
    outline: 2px solid var(--focus-outline-color, var(--primary-color));
    outline-offset: 4px;
    border-radius: 8px;
  }
}

.close {
  position: absolute;
  top: theme.$spacing-xs;
  right: theme.$spacing-xs;
  cursor: pointer;
  border: none;
  line-height: 1;

  &:hover {
    transform: translateY(-1px);
  }

  &:focus-visible {
    outline: 2px solid var(--focus-outline-color, var(--primary-color));
    outline-offset: 2px;
    border-radius: 4px;
  }
}

.message {
  font-size: theme.$font-size-md;
  font-weight: theme.$font-weight-bold;
  color: var(--text-color-primary);
  margin-bottom: theme.$spacing-sm;

  @include bp.down(sm) {
    font-size: theme.$font-size-sm;
  }

  @include bp.up(lg) {
    font-size: theme.$font-size-base;
  }
}

.actions {
  display: flex;
  justify-content: center;
  gap: theme.$spacing-sm;
  margin-top: theme.$spacing-sm;

  @include bp.down(sm) {
    gap: theme.$spacing-sm;
  }

  @include bp.up(lg) {
    gap: theme.$spacing-md;
  }
}

@each $k, $v in theme.$rounding {
  .round#{$k} .content {
    border-radius: $v;
  }
}

@each $k, $v in theme.$shadow {
  .shadow#{$k} .content {
    box-shadow: $v;
  }
}

@media (prefers-reduced-motion: reduce) {
  .wrapper,
  .wrapper * {
    transition: none !important;
    animation: none !important;
  }
}

@media (hover: none) {
  .close:hover {
    transform: none;
  }
}

@media (forced-colors: active) {
  .wrapper {
    background: transparent;
  }

  .content {
    background: Canvas;
    color: CanvasText;
    border: 1px solid ButtonText;
    outline-color: Highlight;
  }

  .close {
    color: ButtonText;
    border: 1px solid ButtonText;
    border-radius: 4px;
  }
}
