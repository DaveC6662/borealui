@use "../../../styles/theme" as theme;
@use "../../../styles/globals";
@use "sass:map";

$sizes: (
  "xs": (
    font: theme.$font-size-xs,
    padding: theme.$spacing-xs,
  ),
  "small": (
    font: theme.$font-size-sm,
    padding: theme.$spacing-sm,
  ),
  "medium": (
    font: theme.$font-size-md,
    padding: theme.$spacing-md,
  ),
  "large": (
    font: theme.$font-size-base,
    padding: theme.$spacing-lg,
  ),
  "xl": (
    font: theme.$font-size-lg,
    padding: theme.$spacing-lg,
  ),
);

.tabs_container {
  width: 100%;
  background-color: transparent;
}

.tabs {
  display: flex;
  justify-content: space-evenly;
  align-items: stretch;
  border-bottom: 2px solid var(--text-color-primary);
  padding-bottom: theme.$spacing-sm;
  gap: theme.$spacing-xxs;
  background-color: transparent;

  @media (width <= 480px) {
    flex-direction: column;
  }

  &_icon {
    box-sizing: border-box;
    margin-right: theme.$spacing-sm;
  }

  &_tab {
    flex: 1;
    background-color: var(--background-color-lighter);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
    width: 100%;
    border: none;
    color: var(--text-color-primary);
    font-weight: theme.$font-weight-bold;
    cursor: pointer;
    gap: theme.$spacing-xxs;
    transition:
      color theme.$transition-default,
      transform 0.2s ease-in-out;
    line-height: 1;
    border-right: 0.5px solid var(--text-color-primary);

    &:hover {
      transform: translateY(-2px);
    }

    &:focus {
      outline: 2px solid var(--focus-outline-color);
      outline-offset: 2px;
    }

    &:last-child {
      border-right: none;
    }

    @media (width <= 480px) {
      border-right: none;
      border-bottom: 0.5px solid var(--text-color-primary);

      &:first-child {
        border-radius: 0;
        border-top-left-radius: theme.$border-radius-md;
        border-top-right-radius: theme.$border-radius-md;
      }

      &:last-child {
        border-radius: 0;
        border-bottom-left-radius: theme.$border-radius-md;
        border-bottom-right-radius: theme.$border-radius-md;
        border-bottom: none;
      }
    }
  }

  @each $size, $props in $sizes {
    &_#{$size} .tabs_tab {
      font-size: map.get($props, font);
      padding: map.get($props, padding);
    }
  }

  &_content {
    display: flex;
    flex-direction: column;
    padding: theme.$spacing-md;
    background-color: var(--background-color-dark);
    margin: auto;
    gap: theme.$spacing-xs;
    align-items: center;
    justify-content: center;

    @media (width <= 768px) {
      padding: theme.$spacing-sm;
    }

    @media (width <= 480px) {
      padding: 0;
    }
  }

  @each $theme, $color in theme.$themes {
    &_#{$theme} {
      .tabs_tab.tabs_active {
        background-color: map.get($color, bg);
        border-bottom-color: map.get($color, border);
      }

      .tabs_tab:focus {
        outline: 2px solid map.get($color, border);
        outline-offset: 2px;
      }
    }
  }

  @each $state, $color in theme.$states {
    &_#{$state} {
      .tabs_tab.tabs_active {
        background-color: map.get($color, bg);
        border-bottom-color: map.get($color, border);
      }

      .tabs_tab:focus {
        outline: 2px solid map.get($color, border);
        outline-offset: 2px;
      }
    }
  }

  &_secondary .tabs_tab.active {
    color: var(--text-color-secondary);
  }
}

@each $key, $value in theme.$rounding {
  .tabs_round-#{$key}:first-child {
    border-top-left-radius: $value;
    border-bottom-left-radius: $value;
  }

  .tabs_round-#{$key}:last-child {
    border-top-right-radius: $value;
    border-bottom-right-radius: $value;
  }
}

@each $key, $value in theme.$shadow {
  .tabs_shadow-#{$key} {
    box-shadow: $value;
  }
}
