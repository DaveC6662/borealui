@use "../../../styles/theme" as theme;
@use "../../../styles/_breakpoints" as bp;
@use "../../../styles/globals";
@use "sass:map";

$sizes: (
  "xs": (
    font: theme.$font-size-xs,
    padding: theme.$spacing-xs,
  ),
  "small": (
    font: theme.$font-size-sm,
    padding: theme.$spacing-sm,
  ),
  "medium": (
    font: theme.$font-size-md,
    padding: theme.$spacing-md,
  ),
  "large": (
    font: theme.$font-size-base,
    padding: theme.$spacing-lg,
  ),
  "xl": (
    font: theme.$font-size-lg,
    padding: theme.$spacing-lg,
  ),
);

.tabs_container {
  width: 100%;
  background-color: transparent;

  &:focus-within {
    outline: none;
  }
}

.tabs {
  display: flex;
  justify-content: space-evenly;
  align-items: stretch;
  border-bottom: 2px solid var(--text-color-primary);
  padding-bottom: theme.$spacing-sm;
  gap: theme.$spacing-xxs;
  background-color: transparent;

  @include bp.down(xs) {
    flex-direction: column;
  }
}

.icon {
  box-sizing: border-box;
  margin-right: theme.$spacing-sm;
}

.tab {
  flex: 1;
  background-color: var(--background-color-lighter);
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  width: 100%;
  border: none;
  color: var(--text-color-primary);
  font-weight: theme.$font-weight-bold;
  cursor: pointer;
  gap: theme.$spacing-xxs;
  transition:
    color theme.$transition-default,
    transform 0.2s ease-in-out;
  line-height: 1;
  border-right: 0.5px solid var(--text-color-primary);

  &:hover {
    transform: translateY(-2px);
  }

  &:focus-visible {
    outline: 2px solid var(--focus-outline-color, var(--primary-color));
    outline-offset: 2px;
    border-radius: 6px;
  }

  &:first-child {
    border-top-left-radius: theme.$border-radius-md;
    border-bottom-left-radius: theme.$border-radius-md;
  }

  &:last-child {
    border-top-right-radius: theme.$border-radius-md;
    border-bottom-right-radius: theme.$border-radius-md;
    border-right: none;
  }

  @include bp.down(xs) {
    border-right: none;
    border-bottom: 0.5px solid var(--text-color-primary);

    &:first-child {
      border-radius: 0;
      border-top-left-radius: theme.$border-radius-md;
      border-top-right-radius: theme.$border-radius-md;
    }

    &:last-child {
      border-radius: 0;
      border-bottom-left-radius: theme.$border-radius-md;
      border-bottom-right-radius: theme.$border-radius-md;
      border-bottom: none;
    }
  }
}

@each $size, $props in $sizes {
  .#{$size} .tab {
    font-size: map.get($props, font);
    padding: map.get($props, padding);

    @include bp.up(lg) {
      font-size: calc(#{map.get($props, font)} * 1.05);
    }
  }
}

.content {
  display: flex;
  flex-direction: column;
  padding: theme.$spacing-md;
  background-color: var(--background-color-dark);
  margin: auto;
  gap: theme.$spacing-xs;
  align-items: center;
  justify-content: center;

  @include bp.down(sm) {
    padding: theme.$spacing-sm;
  }

  @include bp.down(xs) {
    padding: 0;
  }
}

@each $themeName, $vals in theme.$themes {
  .#{$themeName} {
    .tab.active {
      background-color: map.get($vals, bg);
      border-bottom-color: map.get($vals, border);
    }

    .tab:focus-visible {
      outline: 2px solid map.get($vals, border);
      outline-offset: 2px;
    }
  }
}

@each $stateName, $vals in theme.$states {
  .#{$stateName} {
    .tab.active {
      background-color: map.get($vals, bg);
      border-bottom-color: map.get($vals, border);
    }

    .tab:focus-visible {
      outline: 2px solid map.get($vals, border);
      outline-offset: 2px;
    }
  }
}

.secondary .tab.active {
  color: var(--text-color-secondary);
}

@each $key, $value in theme.$rounding {
  .round#{$key}:first-child {
    border-top-left-radius: $value;
    border-bottom-left-radius: $value;
  }
  .round#{$key}:last-child {
    border-top-right-radius: $value;
    border-bottom-right-radius: $value;
  }
}

@each $key, $value in theme.$shadow {
  .shadow#{$key} {
    box-shadow: $value;
  }
}

@media (prefers-reduced-motion: reduce) {
  .tab {
    transition: none !important;
  }

  .tab:hover {
    transform: none !important;
  }
}

@media (hover: none) {
  .tab:hover {
    transform: none;
  }
}

@media (forced-colors: active) {
  .tabs {
    border-bottom-color: ButtonText;
  }

  .tab {
    background: ButtonFace;
    color: ButtonText;
    border-right: 1px solid ButtonText;
  }

  .tab.active {
    background: Highlight;
    color: HighlightText;
    border-bottom-color: Highlight;
  }

  .tab:focus-visible {
    outline: 2px solid Highlight;
    outline-offset: 2px;
  }
}
