@use "../../../styles/theme" as theme;
@use "../../../styles/_breakpoints" as bp;
@use "../../../styles/globals";

.wrapper {
  display: flex;
  flex-direction: column;
  margin-bottom: theme.$spacing-md;
  width: fit-content;

  @include bp.down(sm) {
    width: 100%;
  }
}

.label {
  color: var(--text-color-primary);
  font-size: theme.$font-size-md;
  margin-bottom: theme.$spacing-xxs;

  @include bp.down(xs) {
    font-size: theme.$font-size-sm;
  }

  @include bp.up(lg) {
    font-size: theme.$font-size-base;
  }
}
.required {
  color: theme.$error-color;
  margin-left: 4px;
}

.inputWrapper {
  display: flex;
  flex-direction: column;

  @include bp.up(sm) {
    flex-direction: row;
    gap: theme.$spacing-sm;
    align-items: center;
  }
}

.inputField {
  width: fit-content;

  @include bp.down(sm) {
    width: 100%;
  }
}

.controller {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: theme.$spacing-xs;

  @include bp.up(xs) {
    margin-top: 0;
  }
}

.description,
.errorMessage {
  font-size: theme.$font-size-sm;
  margin-top: 4px;

  @include bp.down(xs) {
    font-size: theme.$font-size-xxs;
  }

  @include bp.up(lg) {
    font-size: theme.$font-size-base;
  }
}
.description {
  color: var(--text-color-primary);
}
.errorMessage {
  color: theme.$error-color;
}

.horizontal {
  flex-flow: row wrap;
  align-items: center;
  justify-content: center;

  .label {
    margin-bottom: 0;
    margin-right: theme.$spacing-sm;
    width: auto;
    text-align: left;

    @include bp.up(sm) {
      width: 150px;
      text-align: right;
    }
  }

  .inputWrapper {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    @include bp.up(sm) {
      align-items: flex-start;
      gap: theme.$spacing-xxs;
    }
  }

  .inputField {
    width: fit-content;
    flex: 1;

    &.formError {
      border: 1px solid theme.$error-color;
    }
  }

  .controller {
    margin-left: auto;
    margin-right: theme.$spacing-sm;
  }

  .description,
  .errorMessage {
    margin-left: 0;
    margin-bottom: 0;
    text-align: left;
    line-height: 1em;
  }
}

$size-margins: (
  "xs": theme.$spacing-xs,
  "small": theme.$spacing-sm,
  "medium": theme.$spacing-md,
  "large": theme.$spacing-lg,
  "xl": theme.$spacing-xl,
);

@each $size, $spacing in $size-margins {
  .#{$size} {
    .inputWrapper {
      margin-bottom: $spacing;
    }

    @include bp.down(xs) {
      .form_group_input_wrapper {
        margin-bottom: max(#{$spacing} - 4px, theme.$spacing-xs);
      }
    }
  }
}

.wrapper :focus-visible {
  outline: 2px solid var(--focus-outline-color, var(--primary-color));
  outline-offset: 2px;
  border-radius: 4px;
}

@media (prefers-reduced-motion: reduce) {
  .wrapper,
  .wrapper * {
    transition: none !important;
    animation: none !important;
  }
}

@media (forced-colors: active) {
  .wrapper {
    color: CanvasText;
  }

  .horizontal .inputField.formError {
    border-color: Highlight !important;
  }
}
